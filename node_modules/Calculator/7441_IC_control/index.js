/* 
 * use IC7441 to output 4-bit binary signal 
 * ex: 0000, 0001
 */
function seven_segment_display_controller(option){
	this.pinA = option.pin7;
	this.pinB = option.pin1;
	this.pinC = option.pin2;
	this.pinD = option.pin6;	
	// set all pins to output
	this.outputConfig();
}

seven_segment_display_controller.prototype = {
	
	outputConfig : function (){
		this.pinA.rawDirection(true);
		this.pinB.rawDirection(true);
		this.pinC.rawDirection(true);
		this.pinD.rawDirection(true);
	},
    printWord : function (input){
 
      if (typeof(input) == 'string' ){
        
        if( input == 'none'){
          this.pinA.rawWrite(1);
          this.pinB.rawWrite(1);
          this.pinC.rawWrite(1);
          this.pinD.rawWrite(1);
          return;
        }
        
        var number = parseInt(input);
        
        if (number < 10){
          var D1 = number % 2;
          number /= 2;
          number = Math.floor(number);
          var D2 = number % 2;
          number /= 2;
          number = Math.floor(number);
          var D3 = number % 2;
          number /= 2;
          number = Math.floor(number);
          var D4 = number % 2;
          
          this.pinA.rawWrite(D1);
          this.pinB.rawWrite(D2);
          this.pinC.rawWrite(D3);
          this.pinD.rawWrite(D4);
        }
        else console.log('error.');
      }
      else if ( typeof(input) == 'number' ){
        var number = input;
        if (number < 10){
          number = Math.floor(number);
          var D1 = number%2;
          number/=2;
          number = Math.floor(number);
          var D2 = number%2;
          number/=2;
          number = Math.floor(number);
          var D3 = number%2;
          number/=2;
          number = Math.floor(number);
          var D4 = number%2;
          
          this.pinA.rawWrite(D1);
          this.pinB.rawWrite(D2);
          this.pinC.rawWrite(D3);
          this.pinD.rawWrite(D4);
        }
        else console.log('error.');
      }
      else console.log('something wrong.');
    }
}

module.exports = seven_segment_display_controller;